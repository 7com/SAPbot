package Serial;

import com.fazecast.jSerialComm.SerialPort;
import java.awt.Color;
import java.awt.Image;
import java.awt.Toolkit;
import javax.swing.JOptionPane;

public class MenuConfiguracion extends javax.swing.JFrame {

    private SerialPort comPort[] = SerialPort.getCommPorts();

    public MenuConfiguracion() {
        initComponents();
        this.getContentPane().setBackground(Color.white);
    }
    
    //Función para configurar el ícono de la ventana.
    @Override
    public Image getIconImage() {
        Image retValue = Toolkit.getDefaultToolkit().
                getImage(ClassLoader.getSystemResource("Imagenes/icon.png"));


        return retValue;
    }
    
    //La función cargarPuertos() se dedica a cargar los puertos seriales del
    //sistema y agregarlos a los jComboBox correspondientes. La función envía un
    //error en caso de no tener el mínimo de puertos necesarios para funcionar
    //(2 puertos seriales).
    public void cargarPuertos(){
        if (comPort.length == 0){
            JOptionPane.showMessageDialog(this,"No hay puertos seriales detectados.","Error",JOptionPane.ERROR_MESSAGE);
            jButton1.setEnabled(false);
        }
        else 
        {
            if (comPort.length < 3){
                JOptionPane.showMessageDialog(this,"El sistema requiere al menos 3 puertos seriales para funcionar.","Error",JOptionPane.ERROR_MESSAGE);
                jButton1.setEnabled(false);
            }
        }
        for(int i=0; i<comPort.length ; i++)
        {
            jComboBox1.addItem(new ComboItem(comPort[i].getDescriptivePortName(),comPort[i]));
            jComboBox2.addItem(new ComboItem(comPort[i].getDescriptivePortName(),comPort[i]));
            jComboBox3.addItem(new ComboItem(comPort[i].getDescriptivePortName(),comPort[i]));
            jButton1.setEnabled(true);
        }
    }
    
    private boolean comprobarPuertos(){
        ComboItem i = (ComboItem)jComboBox1.getSelectedItem();
        ComboItem j = (ComboItem)jComboBox2.getSelectedItem();
        ComboItem k = (ComboItem)jComboBox3.getSelectedItem();
        if (i.getPuerto() != j.getPuerto()){
            JOptionPane.showMessageDialog(this,"El puerto del Controlador no puede ser igual al del Arduino.","Error",JOptionPane.ERROR_MESSAGE);
            return false;
        }
        if (j.getPuerto() != k.getPuerto()){
            JOptionPane.showMessageDialog(this,"El puerto del Controlador no puede ser igual al del ADAM.","Error",JOptionPane.ERROR_MESSAGE);
            return false;
        }
        if (k.getPuerto() != k.getPuerto()){
            JOptionPane.showMessageDialog(this,"El puerto del Arduino no puede ser igual al del ADAM.","Error",JOptionPane.ERROR_MESSAGE);
            return false;
        }
        if(!i.getPuerto().openPort()){
            JOptionPane.showMessageDialog(this,"El puerto "+i.getKey()+" se encuentra en uso.","Error",JOptionPane.ERROR_MESSAGE);
            return false;
        }
        if(!j.getPuerto().openPort()){
            JOptionPane.showMessageDialog(this,"El puerto "+j.getKey()+" se encuentra en uso.","Error",JOptionPane.ERROR_MESSAGE);
            return false;
        }
        if(!k.getPuerto().openPort()){
            JOptionPane.showMessageDialog(this,"El puerto "+k.getKey()+" se encuentra en uso.","Error",JOptionPane.ERROR_MESSAGE);
            return false;
        }
        return true;
    }
    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jComboBox1 = new javax.swing.JComboBox<>();
        jButton1 = new javax.swing.JButton();
        jLabel1 = new javax.swing.JLabel();
        jComboBox2 = new javax.swing.JComboBox<>();
        jLabel2 = new javax.swing.JLabel();
        jLabel5 = new javax.swing.JLabel();
        jButton2 = new javax.swing.JButton();
        jButton3 = new javax.swing.JButton();
        jCheckBox1 = new javax.swing.JCheckBox();
        jLabel3 = new javax.swing.JLabel();
        jLabel4 = new javax.swing.JLabel();
        jComboBox3 = new javax.swing.JComboBox<>();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);
        setTitle("SAPBot");
        setBackground(new java.awt.Color(255, 255, 255));
        setIconImage(getIconImage());
        setResizable(false);

        jComboBox1.setFont(new java.awt.Font("Arial", 0, 11)); // NOI18N

        jButton1.setFont(new java.awt.Font("Arial", 0, 11)); // NOI18N
        jButton1.setText("Iniciar");
        jButton1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton1ActionPerformed(evt);
            }
        });

        jLabel1.setFont(new java.awt.Font("Arial", 0, 11)); // NOI18N
        jLabel1.setText("Puerto Controlador:");

        jComboBox2.setFont(new java.awt.Font("Arial", 0, 11)); // NOI18N
        jComboBox2.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jComboBox2ActionPerformed(evt);
            }
        });

        jLabel2.setFont(new java.awt.Font("Arial", 0, 11)); // NOI18N
        jLabel2.setText("Puerto Arduino Mega:");

        jLabel5.setIcon(new javax.swing.ImageIcon(getClass().getResource("/Imagenes/Logo.png"))); // NOI18N

        jButton2.setFont(new java.awt.Font("Arial", 0, 11)); // NOI18N
        jButton2.setText("Recargar Puertos");
        jButton2.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton2ActionPerformed(evt);
            }
        });

        jButton3.setFont(new java.awt.Font("Arial", 0, 11)); // NOI18N
        jButton3.setText("Ayuda");
        jButton3.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton3ActionPerformed(evt);
            }
        });

        jCheckBox1.setBackground(new java.awt.Color(255, 255, 255));
        jCheckBox1.setFont(new java.awt.Font("Arial", 0, 11)); // NOI18N
        jCheckBox1.setText("Posee Slidebase");

        jLabel3.setFont(new java.awt.Font("Arial", 0, 11)); // NOI18N
        jLabel3.setText("Slidebase:");

        jLabel4.setBackground(new java.awt.Color(255, 255, 255));
        jLabel4.setFont(new java.awt.Font("Arial", 0, 11)); // NOI18N
        jLabel4.setText("Puerto ADAM 4017:");

        jComboBox3.setFont(new java.awt.Font("Arial", 0, 11)); // NOI18N

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                    .addGroup(javax.swing.GroupLayout.Alignment.LEADING, layout.createSequentialGroup()
                        .addComponent(jButton2)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addComponent(jButton3))
                    .addGroup(javax.swing.GroupLayout.Alignment.LEADING, layout.createSequentialGroup()
                        .addComponent(jLabel5)
                        .addGap(0, 0, Short.MAX_VALUE))
                    .addGroup(javax.swing.GroupLayout.Alignment.LEADING, layout.createSequentialGroup()
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(jLabel1)
                            .addComponent(jLabel2)
                            .addComponent(jLabel4)
                            .addComponent(jLabel3))
                        .addGap(18, 18, 18)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(jCheckBox1, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                            .addComponent(jComboBox1, 0, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                            .addComponent(jComboBox2, javax.swing.GroupLayout.Alignment.TRAILING, 0, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                            .addComponent(jComboBox3, 0, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))))
                .addContainerGap())
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addComponent(jButton1)
                .addGap(167, 167, 167))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jLabel5, javax.swing.GroupLayout.PREFERRED_SIZE, 100, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(20, 20, 20)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jComboBox1, javax.swing.GroupLayout.PREFERRED_SIZE, 40, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel1))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jComboBox2, javax.swing.GroupLayout.PREFERRED_SIZE, 40, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel2))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jComboBox3, javax.swing.GroupLayout.PREFERRED_SIZE, 40, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel4))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jCheckBox1)
                    .addComponent(jLabel3))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 6, Short.MAX_VALUE)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jButton2)
                    .addComponent(jButton3))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jButton1)
                .addGap(15, 15, 15))
        );

        pack();
        setLocationRelativeTo(null);
    }// </editor-fold>//GEN-END:initComponents

    //Evento encargado de verificar que los puertos seleccionados no se encuentren
    //en uso por alguna aplicación en el sistema o que se eligiera el mismo puerto
    //tanto para el arduino como para el controlador del Scorbot
    private void jButton1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton1ActionPerformed
        // TODO add your handling code here:
        ComboItem i = (ComboItem)jComboBox1.getSelectedItem();
        ComboItem j = (ComboItem)jComboBox2.getSelectedItem();
        ComboItem k = (ComboItem)jComboBox3.getSelectedItem();
        
        if(comprobarPuertos())
        {
            Adquisicion a = new Adquisicion(jCheckBox1.isSelected());
            a.scorbot = i.getPuerto();
            a.adam = k.getPuerto();
            a.lectura.start();
            a.arduino = j.getPuerto();
            this.setVisible(false);
            a.setVisible(true);
        }
    }//GEN-LAST:event_jButton1ActionPerformed

    //Evento para recargar los puertos en los jComboBox
    private void jButton2ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton2ActionPerformed
        // TODO add your handling code here:
        comPort = SerialPort.getCommPorts();
        jComboBox1.removeAllItems();
        jComboBox2.removeAllItems();
        jComboBox3.removeAllItems();
        cargarPuertos();
    }//GEN-LAST:event_jButton2ActionPerformed

    private void jButton3ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton3ActionPerformed
        JOptionPane.showMessageDialog(this,"Hugo Rios Fuentes - Felipe Valenzuela Cornejo\n"
                + "Universidad del Bío-Bío 2017-2\n\n"
                + "Este programa fue diseñado para obtener datos del Brazo Robot Scorbot ER-V Plus.\n\n"
                + "Para inicar el programa seleccione los puertos correspondietes para cada dispositivo.\n"
                + "Para el correcto funcionamiento del programa, se requiere que la fecha y hora esten correctas.\n\n"
                + "Para mayores consultas, revisar manual de usuario ubicado en la carpeta del sistema.","Ayuda",JOptionPane.INFORMATION_MESSAGE);
    }//GEN-LAST:event_jButton3ActionPerformed

    private void jComboBox2ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jComboBox2ActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_jComboBox2ActionPerformed

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton jButton1;
    private javax.swing.JButton jButton2;
    private javax.swing.JButton jButton3;
    private javax.swing.JCheckBox jCheckBox1;
    private javax.swing.JComboBox<ComboItem> jComboBox1;
    private javax.swing.JComboBox<ComboItem> jComboBox2;
    private javax.swing.JComboBox<ComboItem> jComboBox3;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JLabel jLabel5;
    // End of variables declaration//GEN-END:variables
}

//Clase ComboIteam para utilizar en los jComboBox que contiene la descripción
//del puerto serial y el objeto SerialPort correspondiente a él.
class ComboItem
{
    private String key;
    private SerialPort puerto;

    public ComboItem(String key, SerialPort puerto)
    {
        this.key = key;
        this.puerto = puerto;
    }

    @Override
    public String toString()
    {
        return key;
    }

    public String getKey()
    {
        return key;
    }

    public SerialPort getPuerto()
    {
        return puerto;
    }
}

